#Config file is in ./nginx/conf/nginx.conf
#See https://github.com/arut/nginx-rtmp-module for more information on how to configure RTMP.
user www-data;
worker_processes auto;
pid /home/kamaii/nginx.pid;
events {
        worker_connections 768;
        # multi_accept on;
}

http {
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        default_type application/octet-stream;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        gzip on;
        server {
            server_name kamaii.tv;
            location / {
                proxy_set_header   X-Forwarded-For $remote_addr;
                proxy_set_header   Host $http_host;
                proxy_pass         http://localhost:3000;
            }
            listen 443 ssl; # managed by Certbot
            ssl_certificate /etc/letsencrypt/live/kamaii.tv/fullchain.pem; # managed by Certbot
            ssl_certificate_key /etc/letsencrypt/live/kamaii.tv/privkey.pem; # managed by Certbot
        }
}

rtmp {
    server {
        #The port that RTMP will listen on.
        listen 1935;
        #You can play around with this to find the best settings for your server
        chunk_size 3000;
        #This is the rtmp end point that users will connect to, ie. rtmp://kamaii.tv/stream
        application stream {
            live on;
            dash on;
            #Change this line to point to the path you want to store stream data
            dash_path /home/kamaii/kamaiitv/server/public/live;
	    dash_cleanup on;
            #prevent direct playback of rtmp streams
            deny play all;
            #Change this line to point to the endpoint to notify when stream is online
            #i.e. http://localhost:3001/streams/on_publish;
            on_publish http://localhost:3000/streams/on_publish;
            #Change this line to point to the endpoint to notify when stream is stopped
            #i.e. http://localhost:3001/streams/on_done;
            on_done http://localhost:3000/streams/on_done;
        }
    }
}
